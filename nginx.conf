events {
  worker_connections 1024;
}

# round robin algo
# http {
#   upstream backend_servers {
#     server servera:4000;
#     # You can uncomment these lines when needed
#     server serverb:5000;
#     server serverc:4200;
#   }
http {
  upstream backend_servers {
    server servera:4000;
    server serverb:5000 weight=5;
    server serverc:4200 backup;
  }
  server {
    listen 80;

    # Route all /api/ requests to the upstream servers
    location /users/ {
      proxy_pass http://backend_servers; # Proxy to the upstream group
      proxy_http_version 1.1;  # Ensure HTTP 1.1 for things like keep-alive and WebSockets
      proxy_set_header Connection ""; # Forward the connection header for keep-alive

      # Forward client details to backend
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Serve a simple index page at the root if needed
    location / {
      return 200 "Welcome to Nginx proxy server.\n";
      add_header Content-Type text/plain;
    }
  }
}
